(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{360:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-内置类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-内置类型"}},[s._v("#")]),s._v(" 1. 内置类型")]),s._v(" "),t("h3",{attrs:{id:"值类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#值类型"}},[s._v("#")]),s._v(" 值类型：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("bool\nint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，int8，int16，int32，int64\nuint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，uint8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("byte"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，uint16,，uint32，uint64\nfloat32，float64\nstring\ncomplex64，complex128\narray       -- 固定长度的数组\nstruct      -- 结构体\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"引用类型-指针类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用类型-指针类型"}},[s._v("#")]),s._v(" 引用类型：(指针类型)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("slice     -- 切片"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("常用"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmap       -- 映射\nchan      -- 管道\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_2-内置函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内置函数"}},[s._v("#")]),s._v(" 2. 内置函数")]),s._v(" "),t("p",[s._v("Go 语言拥有一些不需要进行导入操作就可以使用的内置函数。它们有时可以针对不同的类型进行操作，例如：len、cap 和 append，或必须用于系统级的操作，例如：panic。因此，它们需要直接获得编译器的支持。")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("append")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 用来追加元素到切片slice中，返回修改后的切片slice\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("close")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 主要用来关闭channel\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("delete")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 从"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),s._v("中删除key对应的value\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("panic")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 停止常规的"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("goroutine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("panic")]),s._v("和"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("recover")]),s._v("用来做错误处理"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("recover")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 允许程序定义goroutine的"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("panic")]),s._v("动作\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("real")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 返回"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex")]),s._v("的实部"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("real")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("imag")]),s._v("：用于创建和操作复数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("imag")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 返回"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex")]),s._v("的虚部\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("make")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 用来分配内存，返回Type本身"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("只能应用于slice，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),s._v("，channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("new")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 用来分配内存，主要用来分配值类型，比如"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("。返回指向Type的指针\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("cap")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" capacity是容量的意思，用于返回某个类型的最大容量"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("只能用于slice和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("copy")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 用于复制和连接slice，返回复制的元素数，取"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("的最小值\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 用来求长度，比如"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("、array、slice、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),s._v("、channel，返回长度\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("print")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("println")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 底层打印函数，在部署环境中建议使用fmt包\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"_3-内置接口-error"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-内置接口-error"}},[s._v("#")]),s._v(" 3. 内置接口 error")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//只要实现Error()函数，返回值为String的都实现了err接口")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" String\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);